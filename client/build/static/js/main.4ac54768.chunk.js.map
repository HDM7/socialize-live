{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/SignIn.js","components/screens/Profile.js","components/screens/Signup.js","components/screens/CreatePost.js","reducers/userReducer.js","components/screens/UserProfile.js","components/screens/SubscribesUserPosts.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","searchModal","useRef","useState","search","setSearch","userDetails","setUserDetails","useContext","UserContext","state","dispatch","history","useHistory","useEffect","M","Modal","init","current","className","to","id","style","color","onClick","localStorage","clear","type","push","class","ref","placeholder","value","onChange","e","query","target","fetch","method","headers","body","JSON","stringify","then","res","json","results","user","map","item","_id","getInstance","close","email","Home","data","setData","getItem","result","console","log","posts","padding","postedBy","name","float","postid","Authorization","newData","filter","src","photo","likes","includes","postId","catch","err","length","title","comments","record","fontWeight","text","onSubmit","preventDefault","SignIn","password","setPasword","setEmail","test","error","toast","html","classes","setItem","token","payload","Profile","mypics","setPics","image","setImage","mypost","FormData","append","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","height","borderRadius","followers","following","file","files","alt","setName","undefined","setUrl","uploadFields","PostData","uploadPic","CretePost","setTitle","setBody","textAlign","postDetails","reducer","action","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","followId","prevState","unfollowId","newFollower","createContext","Routing","parse","location","pathname","startsWith","exact","path","Signup","CreatePost","UserProfile","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4ac54768.chunk.js","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../App'\nimport M from 'materialize-css'\nconst NavBar = () => {\n    const searchModal = useRef(null)\n    const [search, setSearch] = useState('')\n    const [userDetails, setUserDetails] = useState([])\n    const { state, dispatch } = useContext(UserContext)\n    const history = useHistory()\n    useEffect(() => {\n        M.Modal.init(searchModal.current)\n    }, [])\n    const renderList = () => {\n        if (state) {\n            return [ <\n                li key = \"1\" > < i data-target = \"modal1\"\n                className = \"large material-icons modal-trigger\"\n                style = {\n                    { color: \"black\" }\n                } > search < /i></li > , <\n                li key = \"2\" > < Link to = \"/profile\" > Profile < /Link></li > , <\n                li key = \"3\" > < Link to = \"/create\" > Create Post < /Link></li > , <\n                li key = \"4\" > < Link to = \"/myfollowingpost\" > Following < /Link></li > , <\n                li key = \"5\" >\n                <\n                button className = \"btn #c62828 red darken-3\"\n                onClick = {\n                    () => {\n                        localStorage.clear()\n                        dispatch({ type: \"CLEAR\" })\n                        history.push('/signin')\n                    }\n                } >\n                Logout <\n                /button> < /\n                li >\n\n\n            ]\n        } else {\n            return [ <\n                li key = \"6\" > < Link to = \"/signin\" > Login < /Link></li > , <\n                li key = \"7\" > < Link to = \"/signup\" > Sign Up < /Link></li >\n\n            ]\n        }\n    }\n\n\n    const fetchUsers = (query) => {\n        setSearch(query)\n        fetch('/search-users', {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    query\n                })\n            }).then(res => res.json())\n            .then(results => {\n                setUserDetails(results.user)\n            })\n    }\n    return ( <\n        nav >\n        <\n        div className = \"nav-wrapper white\" >\n        <\n        Link to = { state ? \"/\" : \"/signin\" }\n        className = \"brand-logo left\" > Socialize < /Link> <\n        ul id = \"nav-mobile\"\n        className = \"right\" > { renderList() }\n\n        <\n        /ul> < /\n        div > <\n        div id = \"modal1\"\n        class = \"modal\"\n        ref = { searchModal }\n        style = {\n            { color: \"black\" }\n        } >\n        <\n        div className = \"modal-content\" >\n        <\n        input type = \"text\"\n        placeholder = \"search users\"\n        value = { search }\n        onChange = {\n            (e) => fetchUsers(e.target.value)\n        }\n        /> <\n        ul className = \"collection\" > {\n            userDetails.map(item => {\n                return <Link to = { item._id !== state._id ? \"/profile/\" + item._id : '/profile' }\n                onClick = {\n                    () => {\n                        M.Modal.getInstance(searchModal.current).close()\n                        setSearch('')\n                    }\n                } > < li className = \"collection-item\" > { item.email } < /li></Link >\n            })\n        }\n\n        <\n        /ul> < /\n        div > <\n        div className = \"modal-footer\" >\n        <\n        button className = \"modal-close waves-effect waves-green btn-flat\"\n        onClick = {\n            () => setSearch('')\n        } > close < /button> < /\n        div > <\n        /div> < /\n        nav >\n    )\n}\n\n\nexport default NavBar","import React,{useState,useEffect,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\nconst Home  = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n       fetch('/allpost',{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           console.log(result)\n           setData(result.posts)\n       })\n    },[])\n\n    const likePost = (id)=>{\n          fetch('/like',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n                   //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n    const unlikePost = (id)=>{\n          fetch('/unlike',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n            //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n          fetch('/comment',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId,\n                  text\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n              console.log(result)\n              const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n             })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n\n    const deletePost = (postid)=>{\n        fetch(`/deletepost/${postid}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n   return (\n       <div className=\"home\">\n           {\n               data.map(item=>{\n                   return(\n                       <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \n                            && <i className=\"material-icons\" style={{\n                                float:\"right\"\n                            }} \n                            onClick={()=>deletePost(item._id)}\n                            >delete</i>\n\n                            }</h5>\n                            <div className=\"card-image\">\n                                <img src={item.photo}/>\n                            </div>\n                            <div className=\"card-content\">\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                            {item.likes.includes(state._id)\n                            ? \n                             <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                              >thumb_down</i>\n                            : \n                            <i className=\"material-icons\"\n                            onClick={()=>{likePost(item._id)}}\n                            >thumb_up</i>\n                            }\n                            \n                           \n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \n                                </form>\n                                \n                            </div>\n                        </div> \n                   )\n               })\n           }\n          \n          \n       </div>\n   )\n}\n\n\nexport default Home","import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport M from \"materialize-css\";\nconst SignIn = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [password, setPasword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const PostData = () => {\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n                email\n            )) {\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" });\n            return;\n        }\n        fetch(\"/signin\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    password,\n                    email,\n                }),\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                if (data.error) {\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n                } else {\n                    localStorage.setItem(\"jwt\", data.token);\n                    localStorage.setItem(\"user\", JSON.stringify(data.user));\n                    dispatch({ type: \"USER\", payload: data.user });\n                    M.toast({\n                        html: \"Login Success!\",\n                        classes: \"#43a047 green darken-1\",\n                    });\n                    history.push(\"/\");\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n    return ( <\n        div className = \"mycard\" >\n        <\n        div className = \"card auth-card input-field\" >\n        <\n        h2 > Socialize < /h2>{\" \"} <\n        input type = \"text\"\n        placeholder = \"Email\"\n        value = { email }\n        onChange = { e => setEmail(e.target.value) }\n        />{\" \"} <\n        input type = \"password\"\n        placeholder = \"Password\"\n        value = { password }\n        onChange = { e => setPasword(e.target.value) }\n        />{\" \"} <\n        button className = \"btn waves-effect waves-light #64b5f6 blue darken-1\"\n        onClick = {\n            () => PostData()\n        } >\n        Login { \" \" } <\n        /button>{\" \"} <\n        h5 >\n        <\n        Link to = \"/signup\" > Need an account ? < /Link>{\" \"} < /\n        h5 > { \" \" } <\n        /div>{\" \"} < /\n        div >\n    );\n};\n\nexport default SignIn;","import React, { useEffect, useState, useContext } from 'react'\nimport { UserContext } from '../../App'\n\nconst Profile = () => {\n    const [mypics, setPics] = useState([])\n    const { state, dispatch } = useContext(UserContext)\n    const [image, setImage] = useState(\"\")\n    useEffect(() => {\n        fetch('/mypost', {\n                headers: {\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n                }\n            }).then(res => res.json())\n            .then(result => {\n                console.log(result)\n                setPics(result.mypost)\n            })\n    }, [])\n    useEffect(() => {\n        if (image) {\n            const data = new FormData()\n            data.append(\"file\", image)\n            data.append(\"upload_preset\", \"insta-clone\")\n            data.append(\"cloud_name\", \"cnq\")\n            fetch(\"https://api.cloudinary.com/v1_1/hdm007/image/upload\", {\n                    method: \"post\",\n                    body: data\n                })\n                .then(res => res.json())\n                .then(data => {\n\n\n                    fetch('/updatepic', {\n                            method: \"put\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n                            },\n                            body: JSON.stringify({\n                                pic: data.url\n                            })\n                        }).then(res => res.json())\n                        .then(result => {\n                            console.log(result)\n                            localStorage.setItem(\"user\", JSON.stringify({...state, pic: result.pic }))\n                            dispatch({ type: \"UPDATEPIC\", payload: result.pic })\n                                //window.location.reload()\n                        })\n\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n    }, [image])\n    const updatePhoto = (file) => {\n        setImage(file)\n    }\n    return ( <\n        div style = {\n            { maxWidth: \"550px\", margin: \"0px auto\" }\n        } >\n        <\n        div style = {\n            {\n                margin: \"18px 0px\",\n                borderBottom: \"1px solid grey\"\n            }\n        } >\n\n\n        <\n        div style = {\n            {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n\n            }\n        } >\n        <\n        div >\n        <\n        img style = {\n            { width: \"160px\", height: \"160px\", borderRadius: \"80px\" }\n        }\n        src = { state ? state.pic : \"loading\" }\n        />\n\n        <\n        /div> <\n        div >\n        <\n        h4 > { state ? state.name : \"loading\" } < /h4> <\n        h5 > { state ? state.email : \"loading\" } < /h5> <\n        div style = {\n            { display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }\n        } >\n        <\n        h6 > { mypics.length }\n        posts < /h6> <\n        h6 > { state ? state.followers.length : \"0\" }\n        followers < /h6> <\n        h6 > { state ? state.following.length : \"0\" }\n        following < /h6> < /\n        div >\n\n        <\n        /div> < /\n        div >\n\n        <\n        div className = \"file-field input-field\"\n        style = {\n            { margin: \"10px\" }\n        } >\n        <\n        div className = \"btn #64b5f6 blue darken-1\" >\n        <\n        span > Update Pic < /span> <\n        input type = \"file\"\n        onChange = {\n            (e) => updatePhoto(e.target.files[0])\n        }\n        /> < /\n        div > <\n        div className = \"file-path-wrapper\" >\n        <\n        input className = \"file-path validate\"\n        type = \"text\" / >\n        <\n        /div> < /\n        div > <\n        /div>       <\n        div className = \"gallery\" > {\n            mypics.map(item => {\n                return ( <\n                    img key = { item._id }\n                    className = \"item\"\n                    src = { item.photo }\n                    alt = { item.title }\n                    />  \n                )\n            })\n        }\n\n\n        <\n        /div> < /\n        div >\n    )\n}\n\n\nexport default Profile","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\nconst SignIn = () => {\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [password, setPasword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [url, setUrl] = useState(undefined)\n    useEffect(() => {\n        if (url) {\n            uploadFields()\n        }\n    }, [url])\n    const uploadPic = () => {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"socialize\")\n        data.append(\"cloud_name\", \"hdm007\")\n        fetch(\"https://api.cloudinary.com/v1_1/hdm007/image/upload\", {\n                method: \"post\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(data => {\n                setUrl(data.url)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    const uploadFields = () => {\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n        fetch(\"/signup\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    name,\n                    password,\n                    email,\n                    pic: url\n                })\n            }).then(res => res.json())\n            .then(data => {\n                if (data.error) {\n                    M.toast({ html: \"Oops! something went wrong\", classes: \"#c62828 red darken-3\" })\n                } else {\n                    M.toast({ html: \"SignUp Success!\", classes: \"#43a047 green darken-1\" })\n                    history.push('/signin')\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n    const PostData = () => {\n        if (image) {\n            uploadPic()\n        } else {\n            uploadFields()\n        }\n\n    }\n\n    return ( <\n        div className = \"mycard\" >\n        <\n        div className = \"card auth-card input-field\" >\n        <\n        h2 > Socialize < /h2> <\n        input type = \"text\"\n        placeholder = \"Username\"\n        value = { name }\n        onChange = {\n            (e) => setName(e.target.value)\n        }\n        /> <\n        input type = \"text\"\n        placeholder = \"Email\"\n        value = { email }\n        onChange = {\n            (e) => setEmail(e.target.value)\n        }\n        /> <\n        input type = \"password\"\n        placeholder = \"Password\"\n        value = { password }\n        onChange = {\n            (e) => setPasword(e.target.value)\n        }\n        /> <\n        div className = \"file-field input-field\" >\n        <\n        div className = \"btn #64b5f6 blue darken-1\" >\n        <\n        span > Pic < /span> <\n        input type = \"file\"\n        onChange = {\n            (e) => setImage(e.target.files[0])\n        }\n        /> < /\n        div > <\n        div className = \"file-path-wrapper\" >\n        <\n        input className = \"file-path validate\"\n        type = \"text\" / >\n        <\n        /div> < /\n        div > <\n        button className = \"btn waves-effect waves-light #64b5f6 blue darken-1\"\n        onClick = {\n            () => PostData()\n        } >\n        Sign Up <\n        /button> <\n        h5 >\n        <\n        Link to = \"/signin\" >Have an account ? < /Link> < /\n        h5 >\n\n\n\n\n\n        <\n        /div> < /\n        div >\n    )\n}\n\n\nexport default SignIn","import React,{useState,useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\nconst CretePost = ()=>{\n    const history = useHistory()\n    const [title,setTitle] = useState(\"\")\n    const [body,setBody] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    useEffect(()=>{\n       if(url){\n        fetch(\"/createpost\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                title,\n                body,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n    \n           if(data.error){\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n           }\n           else{\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\n               history.push('/')\n           }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n    },[url])\n  \n   const postDetails = ()=>{\n       const data = new FormData()\n       data.append(\"file\",image)\n       data.append(\"upload_preset\",\"socialize\")\n       data.append(\"cloud_name\",\"hdm007\")\n       fetch(\" https://api.cloudinary.com/v1_1/hdm007/image/upload\",{\n           method:\"post\",\n           body:data\n       })\n       .then(res=>res.json())\n       .then(data=>{\n          setUrl(data.url)\n       })\n       .catch(err=>{\n           console.log(err)\n       })\n\n    \n   }\n \n\n   return(\n       <div className=\"card input-filed\"\n       style={{\n           margin:\"30px auto\",\n           maxWidth:\"500px\",\n           padding:\"20px\",\n           textAlign:\"center\"\n       }}\n       >\n           <input \n           type=\"text\"\n            placeholder=\"title\"\n            value={title}\n            onChange={(e)=>setTitle(e.target.value)}\n            />\n           <input\n            type=\"text\"\n             placeholder=\"body\"\n             value={body}\n            onChange={(e)=>setBody(e.target.value)}\n             />\n           <div className=\"file-field input-field\">\n            <div className=\"btn #64b5f6 blue darken-1\">\n                <span>Uplaod Image</span>\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\n            </div>\n            <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" />\n            </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n            onClick={()=>postDetails()}\n            \n            >\n                Submit post\n            </button>\n\n       </div>\n   )\n}\n\n\nexport default CretePost","export const initialState = null\n\nexport const reducer = (state,action)=>{\n    if(action.type==\"USER\"){\n        return action.payload\n    }\n    if(action.type==\"CLEAR\"){\n        return null\n    }\n    if(action.type==\"UPDATE\"){\n        return {\n            ...state,\n            followers:action.payload.followers,\n            following:action.payload.following\n        }\n    }\n    if(action.type==\"UPDATEPIC\"){\n        return {\n            ...state,\n            pic:action.payload\n        }\n    }\n    return state\n} ","import React,{useEffect,useState,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {useParams} from 'react-router-dom'\nconst Profile  = ()=>{\n    const [userProfile,setProfile] = useState(null)\n    \n    const {state,dispatch} = useContext(UserContext)\n    const {userid} = useParams()\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\n    useEffect(()=>{\n       fetch(`/user/${userid}`,{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           //console.log(result)\n         \n            setProfile(result)\n       })\n    },[])\n\n\n    const followUser = ()=>{\n        fetch('/follow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n        \n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n             localStorage.setItem(\"user\",JSON.stringify(data))\n             setProfile((prevState)=>{\n                 return {\n                     ...prevState,\n                     user:{\n                         ...prevState.user,\n                         followers:[...prevState.user.followers,data._id]\n                        }\n                 }\n             })\n             setShowFollow(false)\n        })\n    }\n    const unfollowUser = ()=>{\n        fetch('/unfollow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            \n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n             localStorage.setItem(\"user\",JSON.stringify(data))\n            \n             setProfile((prevState)=>{\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\n                 return {\n                     ...prevState,\n                     user:{\n                         ...prevState.user,\n                         followers:newFollower\n                        }\n                 }\n             })\n             setShowFollow(true)\n             \n        })\n    }\n   return (\n       <>\n       {userProfile ?\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\n           <div style={{\n               display:\"flex\",\n               justifyContent:\"space-around\",\n               margin:\"18px 0px\",\n               borderBottom:\"1px solid grey\"\n           }}>\n               <div>\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\n                   src={userProfile.user.pic}\n                   />\n               </div>\n               <div>\n                   <h4>{userProfile.user.name}</h4>\n                   <h5>{userProfile.user.email}</h5>\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\n                       <h6>{userProfile.posts.length} posts</h6>\n                       <h6>{userProfile.user.followers.length} followers</h6>\n                       <h6>{userProfile.user.following.length} following</h6>\n                   </div>\n                   {showfollow?\n                   <button style={{\n                       margin:\"10px\"\n                   }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                    onClick={()=>followUser()}\n                    >\n                        Follow\n                    </button>\n                    : \n                    <button\n                    style={{\n                        margin:\"10px\"\n                    }}\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                    onClick={()=>unfollowUser()}\n                    >\n                        UnFollow\n                    </button>\n                    }\n                   \n                  \n\n               </div>\n           </div>\n     \n           <div className=\"gallery\">\n               {\n                   userProfile.posts.map(item=>{\n                       return(\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \n                       )\n                   })\n               }\n\n           \n           </div>\n       </div>\n       \n       \n       : <center><h2>loading...!</h2></center>}\n       \n       </>\n   )\n}\n\n\nexport default Profile","import React,{useState,useEffect,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\nconst Home  = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n       fetch('/getsubpost',{\n           headers:{\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n           }\n       }).then(res=>res.json())\n       .then(result=>{\n           console.log(result)\n           setData(result.posts)\n       })\n    },[])\n\n    const likePost = (id)=>{\n          fetch('/like',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n                   //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n    const unlikePost = (id)=>{\n          fetch('/unlike',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId:id\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n            //   console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n          }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n          fetch('/comment',{\n              method:\"put\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n              },\n              body:JSON.stringify({\n                  postId,\n                  text\n              })\n          }).then(res=>res.json())\n          .then(result=>{\n              console.log(result)\n              const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n             })\n            setData(newData)\n          }).catch(err=>{\n              console.log(err)\n          })\n    }\n\n    const deletePost = (postid)=>{\n        fetch(`/deletepost/${postid}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n   return (\n       <div className=\"home\">\n           {\n               data.map(item=>{\n                   return(\n                       <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \n                            && <i className=\"material-icons\" style={{\n                                float:\"right\"\n                            }} \n                            onClick={()=>deletePost(item._id)}\n                            >delete</i>\n\n                            }</h5>\n                            <div className=\"card-image\">\n                                <img src={item.photo}/>\n                            </div>\n                            <div className=\"card-content\">\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                            {item.likes.includes(state._id)\n                            ? \n                             <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                              >thumb_down</i>\n                            : \n                            <i className=\"material-icons\"\n                            onClick={()=>{likePost(item._id)}}\n                            >thumb_up</i>\n                            }\n                            \n                           \n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \n                                </form>\n                                \n                            </div>\n                        </div> \n                   )\n               })\n           }\n          \n          \n       </div>\n   )\n}\n\n\nexport default Home","import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/SignIn'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport {reducer,initialState} from './reducers/userReducer'\nimport UserProfile from './components/screens/UserProfile'\nimport SubscribedUserPosts from './components/screens/SubscribesUserPosts'\nexport const UserContext = createContext()\n\n\nconst Routing = ()=>{\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n    }else{\n      if(!history.location.pathname.startsWith('/reset'))\n           history.push('/signin')\n    }\n  },[])\n  return(\n    <Switch>\n      <Route exact path=\"/\" >\n      <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/create\">\n        <CreatePost/>\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/myfollowingpost\">\n        <SubscribedUserPosts />\n      </Route> \n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n      \n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}